services:
    element.flask.blueprint:
        class: flask.Blueprint
        arguments: 
            - 'element'
            - 'element'
        kwargs:
            template_folder: '%element.template.dir%'
            
        calls:
            - [ before_app_request, ["@element.dispatcher.request#handle"]]
            - [ after_app_request, ["@element.dispatcher.response#handle"]]

    element.flask.view.index:
        class: [element.views, PathView.as_view]
        arguments: 
            - 'element_path'
            - '@element.node.manager'
            - '@element.context.creator'
            - '@ioc.extra.event_dispatcher'

    element.flask.view.action:
        class: element.views.ActionView
        arguments: 
            - '@element.node.manager'
            - '@element.context.creator'
            - '@ioc.extra.event_dispatcher'
            - '@service_container'

    element.context.creator:
        class: element.context.ContextCreator

    element.node.manager:
        class: element.node.NodeManager
        arguments: 
            - '@element.manager.default'
            - '@ioc.extra.event_dispatcher'

    element.manager.default:
        class: element.manager.fs.FsManager
        arguments:
            - '%element.data.dir%'
            - '@element.loader.chain'

    element.loader.chain:
        class: element.loaders.LoaderChain

    element.loader.yaml:
        class: element.loaders.YamlNodeLoader
        tags:
            element.loader: 
                - name: yaml

    element.loader.inline:
        class: element.loaders.InlineLoader
        tags:
            element.loader: 
                - name: inline

    element.dispatcher.request:
        class: element.event.FlaskRequestElementDispatcher
        arguments:
            - '@ioc.extra.event_dispatcher'
            - 'request'
            - False

        kwargs:
            logger: '@element.logger'
            
    element.dispatcher.response:
        class: element.event.FlaskResponseElementDispatcher
        arguments:
            - '@ioc.extra.event_dispatcher'
            - 'response'
            - True
        kwargs:
            logger: '@element.logger'

    element.logger:
        class: logging.getLogger
        arguments:
            - 'element'